import numpy as np
import matplotlib.pyplot as plt

class HarmonicOscillator:
    def __init__(self, m, k, x0, v0, dt):
        self.m=m
        self.k=k
        self.x0=x0
        self.v0=v0
        self.dt=dt
        self.x=[]
        self.v=[]
        self.a=[]
        self.t=[]
        self.trajanje=2
    def pokreni(self):
        self.t.append(0)
        self.x.append(self.x0)
        self.v.append(self.v0)
        self.a.append(-self.k/self.m*self.x0)
        while self.t[-1] < self.trajanje:
            self.__move()

    def __move(self):
        dt = self.dt
        self.a.append(-self.k/self.m*self.x[-1])
        self.v.append(self.v[-1]+self.a[-1]*dt)
        self.x.append(self.x[-1]+self.v[-1]*dt)
        self.t.append(self.t[-1]+dt)

    def plot_trajectory(self):
        plt.subplot(1,3,1)
        plt.plot(self.t, self.x)
        plt.xlabel('t [s]')
        plt.ylabel('x [m]')
        plt.title('x - t graf')        
        
        plt.subplot(1,3,2)
        plt.plot(self.t, self.v)
        plt.xlabel('t [m]')
        plt.ylabel('v [m/s]')
        plt.title('x - t graf')        
        
        plt.subplot(1,3,3)
        plt.plot(self.t, self.a)
        plt.xlabel('t [s]')
        plt.ylabel('a [m/s^2]')
        plt.title('x - t graf')

        plt.show()

    def period(self):
        for x1 in self.x:
            if x1 < 0.0001:
                i=self.x.index(x1)
                return 4*self.t[i]